import 'dart:isolate';

void main(List<String> args, SendPort replyTo) async {
  final receivePort = ReceivePort();
  final port = receivePort.sendPort;
  replyTo.send(port);
  receivePort.listen((message) {
    final list = message as List<int>;
    final results = <bool>[];
    for (var i = 0; i < list.length; i++) {
      final result = !(i <= 1241 ? i <= 611 ? i <= 301 ? i <= 141 ? i <= 61 ? i <= 21 ? i <= 1 ? i == 1 : i <= 11 ? i == 11 : i == 21 : i <= 41 ? i <= 31 ? i == 31 : i == 41 : i <= 51 ? i == 51 : i == 61 : i <= 101 ? i <= 81 ? i <= 71 ? i == 71 : i == 81 : i <= 91 ? i == 91 : i == 101 : i <= 121 ? i <= 111 ? i == 111 : i == 121 : i <= 131 ? i == 131 : i == 141 : i <= 221 ? i <= 181 ? i <= 161 ? i <= 151 ? i == 151 : i == 161 : i <= 171 ? i == 171 : i == 181 : i <= 201 ? i <= 191 ? i == 191 : i == 201 : i <= 211 ? i == 211 : i == 221 : i <= 261 ? i <= 241 ? i <= 231 ? i == 231 : i == 241 : i <= 251 ? i == 251 : i == 261 : i <= 281 ? i <= 271 ? i == 271 : i == 281 : i <= 291 ? i == 291 : i == 301 : i <= 451 ? i <= 371 ? i <= 331 ? i <= 311 ? i == 311 : i <= 321 ? i == 321 : i == 331 : i <= 351 ? i <= 341 ? i == 341 : i == 351 : i <= 361 ? i == 361 : i == 371 : i <= 411 ? i <= 391 ? i <= 381 ? i == 381 : i == 391 : i <= 401 ? i == 401 : i == 411 : i <= 431 ? i <= 421 ? i == 421 : i == 431 : i <= 441 ? i == 441 : i == 451 : i <= 531 ? i <= 491 ? i <= 471 ? i <= 461 ? i == 461 : i == 471 : i <= 481 ? i == 481 : i == 491 : i <= 511 ? i <= 501 ? i == 501 : i == 511 : i <= 521 ? i == 521 : i == 531 : i <= 571 ? i <= 551 ? i <= 541 ? i == 541 : i == 551 : i <= 561 ? i == 561 : i == 571 : i <= 591 ? i <= 581 ? i == 581 : i == 591 : i <= 601 ? i == 601 : i == 611 : i <= 921 ? i <= 761 ? i <= 681 ? i <= 641 ? i <= 621 ? i == 621 : i <= 631 ? i == 631 : i == 641 : i <= 661 ? i <= 651 ? i == 651 : i == 661 : i <= 671 ? i == 671 : i == 681 : i <= 721 ? i <= 701 ? i <= 691 ? i == 691 : i == 701 : i <= 711 ? i == 711 : i == 721 : i <= 741 ? i <= 731 ? i == 731 : i == 741 : i <= 751 ? i == 751 : i == 761 : i <= 841 ? i <= 801 ? i <= 781 ? i <= 771 ? i == 771 : i == 781 : i <= 791 ? i == 791 : i == 801 : i <= 821 ? i <= 811 ? i == 811 : i == 821 : i <= 831 ? i == 831 : i == 841 : i <= 881 ? i <= 861 ? i <= 851 ? i == 851 : i == 861 : i <= 871 ? i == 871 : i == 881 : i <= 901 ? i <= 891 ? i == 891 : i == 901 : i <= 911 ? i == 911 : i == 921 : i <= 1081 ? i <= 1001 ? i <= 961 ? i <= 941 ? i <= 931 ? i == 931 : i == 941 : i <= 951 ? i == 951 : i == 961 : i <= 981 ? i <= 971 ? i == 971 : i == 981 : i <= 991 ? i == 991 : i == 1001 : i <= 1041 ? i <= 1021 ? i <= 1011 ? i == 1011 : i == 1021 : i <= 1031 ? i == 1031 : i == 1041 : i <= 1061 ? i <= 1051 ? i == 1051 : i == 1061 : i <= 1071 ? i == 1071 : i == 1081 : i <= 1161 ? i <= 1121 ? i <= 1101 ? i <= 1091 ? i == 1091 : i == 1101 : i <= 1111 ? i == 1111 : i == 1121 : i <= 1141 ? i <= 1131 ? i == 1131 : i == 1141 : i <= 1151 ? i == 1151 : i == 1161 : i <= 1201 ? i <= 1181 ? i <= 1171 ? i == 1171 : i == 1181 : i <= 1191 ? i == 1191 : i == 1201 : i <= 1221 ? i <= 1211 ? i == 1211 : i == 1221 : i <= 1231 ? i == 1231 : i == 1241 : i <= 1861 ? i <= 1551 ? i <= 1391 ? i <= 1311 ? i <= 1271 ? i <= 1251 ? i == 1251 : i <= 1261 ? i == 1261 : i == 1271 : i <= 1291 ? i <= 1281 ? i == 1281 : i == 1291 : i <= 1301 ? i == 1301 : i == 1311 : i <= 1351 ? i <= 1331 ? i <= 1321 ? i == 1321 : i == 1331 : i <= 1341 ? i == 1341 : i == 1351 : i <= 1371 ? i <= 1361 ? i == 1361 : i == 1371 : i <= 1381 ? i == 1381 : i == 1391 : i <= 1471 ? i <= 1431 ? i <= 1411 ? i <= 1401 ? i == 1401 : i == 1411 : i <= 1421 ? i == 1421 : i == 1431 : i <= 1451 ? i <= 1441 ? i == 1441 : i == 1451 : i <= 1461 ? i == 1461 : i == 1471 : i <= 1511 ? i <= 1491 ? i <= 1481 ? i == 1481 : i == 1491 : i <= 1501 ? i == 1501 : i == 1511 : i <= 1531 ? i <= 1521 ? i == 1521 : i == 1531 : i <= 1541 ? i == 1541 : i == 1551 : i <= 1701 ? i <= 1621 ? i <= 1581 ? i <= 1561 ? i == 1561 : i <= 1571 ? i == 1571 : i == 1581 : i <= 1601 ? i <= 1591 ? i == 1591 : i == 1601 : i <= 1611 ? i == 1611 : i == 1621 : i <= 1661 ? i <= 1641 ? i <= 1631 ? i == 1631 : i == 1641 : i <= 1651 ? i == 1651 : i == 1661 : i <= 1681 ? i <= 1671 ? i == 1671 : i == 1681 : i <= 1691 ? i == 1691 : i == 1701 : i <= 1781 ? i <= 1741 ? i <= 1721 ? i <= 1711 ? i == 1711 : i == 1721 : i <= 1731 ? i == 1731 : i == 1741 : i <= 1761 ? i <= 1751 ? i == 1751 : i == 1761 : i <= 1771 ? i == 1771 : i == 1781 : i <= 1821 ? i <= 1801 ? i <= 1791 ? i == 1791 : i == 1801 : i <= 1811 ? i == 1811 : i == 1821 : i <= 1841 ? i <= 1831 ? i == 1831 : i == 1841 : i <= 1851 ? i == 1851 : i == 1861 : i <= 2171 ? i <= 2011 ? i <= 1931 ? i <= 1891 ? i <= 1871 ? i == 1871 : i <= 1881 ? i == 1881 : i == 1891 : i <= 1911 ? i <= 1901 ? i == 1901 : i == 1911 : i <= 1921 ? i == 1921 : i == 1931 : i <= 1971 ? i <= 1951 ? i <= 1941 ? i == 1941 : i == 1951 : i <= 1961 ? i == 1961 : i == 1971 : i <= 1991 ? i <= 1981 ? i == 1981 : i == 1991 : i <= 2001 ? i == 2001 : i == 2011 : i <= 2091 ? i <= 2051 ? i <= 2031 ? i <= 2021 ? i == 2021 : i == 2031 : i <= 2041 ? i == 2041 : i == 2051 : i <= 2071 ? i <= 2061 ? i == 2061 : i == 2071 : i <= 2081 ? i == 2081 : i == 2091 : i <= 2131 ? i <= 2111 ? i <= 2101 ? i == 2101 : i == 2111 : i <= 2121 ? i == 2121 : i == 2131 : i <= 2151 ? i <= 2141 ? i == 2141 : i == 2151 : i <= 2161 ? i == 2161 : i == 2171 : i <= 2331 ? i <= 2251 ? i <= 2211 ? i <= 2191 ? i <= 2181 ? i == 2181 : i == 2191 : i <= 2201 ? i == 2201 : i == 2211 : i <= 2231 ? i <= 2221 ? i == 2221 : i == 2231 : i <= 2241 ? i == 2241 : i == 2251 : i <= 2291 ? i <= 2271 ? i <= 2261 ? i == 2261 : i == 2271 : i <= 2281 ? i == 2281 : i == 2291 : i <= 2311 ? i <= 2301 ? i == 2301 : i == 2311 : i <= 2321 ? i == 2321 : i == 2331 : i <= 2411 ? i <= 2371 ? i <= 2351 ? i <= 2341 ? i == 2341 : i == 2351 : i <= 2361 ? i == 2361 : i == 2371 : i <= 2391 ? i <= 2381 ? i == 2381 : i == 2391 : i <= 2401 ? i == 2401 : i == 2411 : i <= 2451 ? i <= 2431 ? i <= 2421 ? i == 2421 : i == 2431 : i <= 2441 ? i == 2441 : i == 2451 : i <= 2471 ? i <= 2461 ? i == 2461 : i == 2471 : i == 2481);
      results.add(result);
    }

    replyTo.send(results);
  });
}
